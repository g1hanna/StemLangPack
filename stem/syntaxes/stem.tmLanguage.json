{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Stem",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#constants"
		},
		{
			"include": "#declarations"
		},
		{
			"include": "#support"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.block.documentation.stem",
					"begin": "\\\\\\\\-",
					"end": "-\\\\\\\\",
					"patterns": [
						{
							"name": "string.quoted.other.macro.stem",
							"begin": "\\`",
							"end": "\\`",
							"patterns": [
								{
									"include": "source.stem"
								}
							]
						},
						{
							"name": "meta.comment.documentation.param.stem",
							"match": "(@param)(\\s+)([a-zA-Z_][a-zA-Z0-9_]*)(\\s+)",
							"captures": {
								"1": {
									"name": "entity.other.attribute-name.documentation.param.stem"
								},
								"3": {
									"name": "variable.other.stem"
								},
								"5": {
									"name": "meta.definition.section.comment.begin.stem"
								}
							}
						}
					]
				},
				{
					"name": "comment.line.character.stem",
					"match": "\\\\\\\\.*$"
				},
				{
					"name": "comment.block.stem",
					"begin": "\\\\-",
					"end": "-\\\\",
					"patterns": []
				}
			]
		},
		"keywords": {
			"name": "keyword.control.stem",
			"match": "\\b(if|else|do|switch|for|while|break|jump|next|redo|return|raise|yield|try|trap|finally|fork|join|exit)\\b"
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric.float.stem",
					"match": "\\b([0-9]+\\.[0-9]+)\\b"
				},
				{
					"name": "constant.numeric.int.stem",
					"match": "\\b([0-9]+)\\b"
				}
			]
		},
		"constants": {
			"name": "constant.language.stem",
			"match": "\\b(true|false|null)\\b"
		},
		"declarations": {
			"patterns": [
				{
					"name": "entity.declaration.function.stem",
					"begin": "(\\$|\\?|\\%)([a-zA-Z_][a-zA-Z0-9_]*)\\(",
					"beginCaptures": {
						"1": {
							"name": "storage.modifier.stem"
						},
						"2": {
							"name": "entity.name.function.stem"
						},
						"4": {
							"name": "punctuation.definition.parameters.begin.round.stem"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.parameters.end.round.stem"
						}
					},
					"patterns": [
						{
							"name": "keyword.operator.parameter.separation.comma.stem",
							"match": ","	
						},
						{
							"include": "#declarations"
						}
					],
					"captures": {
						"1": {
							"name": "storage.modifier.stem"
						},
						"2": {
							"name": "variable.other.stem"
						}
					}
				},
				{
					"name": "entity.declaration.variable.stem",
					"match": "(\\$|\\?|\\%)([a-zA-Z_][a-zA-Z0-9_]*)",
					"captures": {
						"1": {
							"name": "storage.modifier.stem"
						},
						"2": {
							"name": "variable.other.stem"
						}
					}
				}
			]
		},
		"support": {
			"patterns": [
				{
					"name": "support.class.stem",
					"match": "\\b(Console|System|IO|Math|Graphics|OpenGL)\\b"
				}
			]
		}
	},
	"scopeName": "source.stem"
}